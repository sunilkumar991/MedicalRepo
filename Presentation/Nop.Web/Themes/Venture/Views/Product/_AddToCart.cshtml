@model ProductDetailsModel.AddToCartModel
@using Nop.Core.Domain.Orders;
@if (Model.UpdatedShoppingCartItemId > 0)
{
    <input asp-for="UpdatedShoppingCartItemId" type="hidden" />
}
@if (!Model.DisableBuyButton || Model.CustomerEntersPrice)
{
    if (!Model.DisableBuyButton)
    {
        <label asp-for="EnteredQuantity" asp-postfix=":" class="qty-label"></label>
        if (Model.AllowedQuantities.Count > 0)
        {
            <select asp-for="EnteredQuantity" asp-items="Model.AllowedQuantities" class="qty-dropdown"></select>
        }
        else
        {
            <div class="add-to-cart-qty-wrapper">
                <input asp-for="EnteredQuantity" class="qty-input" type="text" />
                <span class="plus">+</span>
                <span class="minus">-</span>
            </div>
            <script asp-location="Footer">
                        //when a customer clicks 'Enter' button we submit the "add to cart" button (if visible)
                        $(document).ready(function() {
                            $("#@Html.IdFor(model => model.EnteredQuantity)").on("keydown", function(event) {
                                if (event.keyCode == 13) {
                                    $("#add-to-cart-button-@Model.ProductId").trigger("click");
                                    return false;
                                }
                            });
                        });
            </script>
        }

        var addToCartText = "";
        if (Model.UpdatedShoppingCartItemId > 0 && Model.UpdateShoppingCartItemType.HasValue && Model.UpdateShoppingCartItemType.Value == ShoppingCartType.ShoppingCart)
        {
            addToCartText = T("ShoppingCart.AddToCart.Update").Text;
        }
        else
        {
            addToCartText = T("ShoppingCart.AddToCart").Text;
            if (Model.IsRental)
            {
                addToCartText = T("ShoppingCart.Rent").Text;
            }
            if (Model.AvailableForPreOrder)
            {
                addToCartText = T("ShoppingCart.PreOrder").Text;
            }
        }
        <input type="button" id="add-to-cart-button-@Model.ProductId" class="button-1 add-to-cart-button" value="@addToCartText" data-productid="@Model.ProductId" onclick="AjaxCart.addproducttocart_details('@Url.RouteUrl("AddProductToCart-Details", new { productId = Model.ProductId, shoppingCartTypeId = (int)ShoppingCartType.ShoppingCart })', '#product-details-form');return false;" />
        
    }
@await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.ProductDetailsAddInfo, additionalData = Model })
}