@model CountryModel
<div class="panel-group">
    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.CountryStateCityDetailsTop, additionalData = Model })

    <div class="panel panel-default">
        <div class="panel-body">
            <div id="errorDisplay">
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="CountryId" />
                </div>
                <div class="col-md-9">
                    <nop-select asp-for="CountryId" asp-items="Model.AvailableCountries" asp-required=true />
                    <span asp-validation-for="CountryId"></span>
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-3">
                    <nop-label asp-for="StateProvinceId" />
                </div>
                <div class="col-md-9">
                    <nop-select asp-for="StateProvinceId" asp-items="Model.AvailableStates" asp-required=true />
                    <span asp-validation-for="StateProvinceId"></span>
                </div>
            </div>

            <div class="row">
                <div class="col-md-7 col-md-offset-5">
                    <button type="button" id="search-shipments" class="btn btn-primary btn-search">
                        <i class="fa fa-search"></i>
                        @T("Admin.Common.Search")
                    </button>
                </div>
            </div>

        </div>
    </div>

    <div class="panel panel-default">
        @if (Model != null)
        {
            @if (Model.Id > 0)
            {
                <div class="panel-body">
                    <div id="cities-grid"></div>
                    <script>
                        //search button
                        $('#search-shipments').click(function () {

                            $("#errorDisplay").empty();
                             var valCountry = $("#@Html.IdFor(model => model.CountryId)").val().trim();
                            var valState = $("#@Html.IdFor(model => model.StateProvinceId)").val().trim();
                            if (valCountry != 0 && valState != 0) {
                                cities();
                                //search
                                var grid = $('#cities-grid').data('kendoGrid');
                                grid.dataSource.page(1); //new search. Set page size to 1
                                return false;
                            }
                            else if (valCountry == 0) {
                                $("#errorDisplay").append('<div class="validation-summary-errors" data-valmsg-summary="true"><ul><li>Please Select the Country.</li></ul></div>');
                                return false;
                            }
                            else if (valState == 0) {
                                $("#errorDisplay").append('<div class="validation-summary-errors" data-valmsg-summary="true"><ul><li>Please Select the State.</li></ul></div>');
                                return false;
                            }
                        });

                        $(document).ready(function () {

                           $("#@Html.IdFor(model => model.CountryId)").change(function () {
                           var selectedItem = $(this).val();
                           var ddlStates = $("#@Html.IdFor(model => model.StateProvinceId)");
                           $.ajax({
                           cache: false,
                           type: "GET",
                           url: "@(Url.Action("GetStatesByCountryId", "Country"))",
                           data: { "countryId": selectedItem, "addSelectStateItem": "true" },
                         success: function (data)
                         {
                               ddlStates.html('');

                        $.each(data, function (id, option) {
                            ddlStates.append($('<option></option>').val(option.id).html(option.name));
                        });
                        },

                        error: function (xhr, ajaxOptions, thrownError) {
                        alert('Failed to retrieve states.');
                        }
                        });
                        });
                        });

                        function cities() {
                        $("#cities-grid").kendoGrid({
                            dataSource: {
                                type: "json",
                                transport: {
                                    read: {
                                        url: "@Html.Raw(Url.Action("Cities", "Country"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: function() {

                                             var data = {

                                                 StateId: $('#@Html.IdFor(model => model.StateProvinceId)').val(),

                                                    };
                                                    addAntiForgeryToken(data);
                                                    return data;
                                        }
                                    },
                                    destroy: {
                                        url: "@Html.Raw(Url.Action("CityDelete", "Country"))",
                                        type: "POST",
                                        dataType: "json",
                                        data: addAntiForgeryToken
                                    }
                                },
                                schema: {

                                    data: "Data",
                                    total: "Total",
                                    errors: "Errors",
                                    model: {
                                        id: "Id"
                                    }
                                },
                                error: function (e) {
                                    display_kendoui_grid_error(e);
                                    // Cancel the changes
                                    this.cancelChanges();
                                },
                                pageSize: @(Model.StateProvinceSearchModel.PageSize),
                                serverPaging: true,
                                serverFiltering: true,
                                serverSorting: true
                            },
                            pageable: {
                                refresh: true,
                                pageSizes: [@(Model.StateProvinceSearchModel.AvailablePageSizes)],
                                @await Html.PartialAsync("_GridPagerMessages")
                            },
                            editable: {
                                confirmation: "@T("Admin.Common.DeleteConfirmation")",
                                mode: "inline"
                            },
                            scrollable: false,
                            columns: [{
                                field: "Name",
                                title: "@T("Admin.Configuration.Countries.States.Fields.Name")",
                                width: 300
                            },
                             {
                                 field: "ShippingCharge",
                                title: "@T("Admin.Configuration.Countries.States.Fields.ShippingCharge")",
                                width: 150
                            },
                                {
                                field: "Abbreviation",
                                title: "@T("Admin.Configuration.Countries.States.Fields.Abbreviation")",
                                width: 150
                            }, {
                                field: "Published",
                                title: "@T("Admin.Configuration.Countries.States.Fields.Published")",
                                width: 100,
                                headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                template: '# if(Published) {# <i class="fa fa-check true-icon"></i> #} else {# <i class="fa fa-close false-icon"></i> #} #'
                            }, {
                                field: "DisplayOrder",
                                title: "@T("Admin.Configuration.Countries.States.Fields.DisplayOrder")",
                                width: 100
                            }, {
                                field: "Id",
                                title: "@T("Admin.Common.Edit")",
                                headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                width: 100,
                                template: "<button onclick=\"javascript:OpenWindow('@Url.Content("~/Admin/Country/CityEditPopup/")#=Id#?btnId=btnRefresh&formId=country-form', 800, 450, true); return false;\" class='btn btn-default'><i class=\"fa fa-pencil\"></i>@T("Admin.Common.Edit")</button>"
                            }, {
                                command: { name: "destroy", text: "@T("Admin.Common.Delete")" },
                                title: "@T("Admin.Common.Delete")",
                                headerAttributes: { style: "text-align:center" },
                                attributes: { style: "text-align:center" },
                                width: 100
                            }]
                        });
                        }

                    </script>

                </div>
                <div class="panel-footer">
                    <div width="100%">
                        <button type="submit" id="btnAddNewState"
                                onclick="javascript:OpenWindow('@(Url.Action("CityCreatePopup", "Country", new {  btnId = "btnRefresh", formId = "country-form" }))', 800, 450, true); return false;"
                                class="btn btn-primary">
                            @T("Admin.Configuration.Countries.States.Cities.AddNew")
                        </button>
                        <input type="submit" id="btnRefresh" style="display: none" />
                        <script>
                            $(document).ready(function () {
                                $('#btnRefresh').click(function () {
                                    alert("refresh");
                                    //refresh grid
                                    var grid = $("#cities-grid").data('kendoGrid');
                                    grid.dataSource.read();

                                    //return false to don't reload a page
                                    return false;
                                });
                            });
                        </script>
                    </div>
                </div>
            }
        }
        else
        {
            <div class="panel-body">
                @T("Admin.Configuration.Countries.States.SaveBeforeEdit")
            </div>
        }
    </div>
    @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.CountryStateCityDetailsBottom, additionalData = Model })
</div>
