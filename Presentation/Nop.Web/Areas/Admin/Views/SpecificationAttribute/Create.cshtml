@model SpecificationAttributeModel

@{
    //page title
    ViewBag.Title = T("Admin.Catalog.Attributes.SpecificationAttributes.AddNew").Text;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Specification attributes");
}

<form asp-controller="SpecificationAttribute" asp-action="Create" method="post" id="specificationattribute-form">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @T("Admin.Catalog.Attributes.SpecificationAttributes.AddNew")
            <small>
                <i class="fa fa-arrow-circle-left"></i>
                <a asp-action="List">@T("Admin.Catalog.Attributes.SpecificationAttributes.BackToList")</a>
            </small>
        </h1>
        <div class="pull-right">
            <button  id="save" type="button" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
            <button  id="save-continue" type="button" name="save-continue" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.SaveContinue")
            </button>
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.SpecificationAttributeDetailsButtons })
        </div>
    </div>
    <div id="errorDisplay">
    </div>


    <script>
        $("#save,#save-continue").click(function () {
            try {
                $(".validation-summary-errors").empty();
                $("#errorDisplay").empty();
                var valName = $("#Name").val().trim();
                if (valName != "") {

                    $.ajax({
                        type: "GET",
                        url: "@Html.Raw(Url.Action("CheckAttributeNameIsAlreadyExist", "SpecificationAttribute"))" + "?specificationAttribute=" + valName,
                        contentType: "application/json; charset=utf-8",
                        dataType: "json",
                        success: function (data) {
                            if (data) {
                                if ($('.validation-summary-errors').length > 0) {
                                    $(".validation-summary-errors").append('<ul><li>This attribute already added.</li></ul>');
                                }
                                else {

                                    $("#errorDisplay").append('<div class="validation-summary-errors" data-valmsg-summary="true"><ul><li>This attribute already added.</li></ul></div>');

                                }

                            }
                            else {
                                $('#save').removeAttr("type").attr("type", "submit");
                                //$('#save').trigger('submit');
                                $('#specificationattribute-form').submit();
                            }
                        }
                    });
                }
                 else
                {
                   // $('#save').removeAttr("type").attr("type", "submit");
                    $('#specificationattribute-form').submit();
                   // $('#save').trigger('submit');
                   // $('#save').removeAttr("type").attr("type", "button");
                }
                }
            catch (e) {
                    alert("Error at : Create.cshtml page"+e);
                }
        });
    </script>

    @await Html.PartialAsync("_CreateOrUpdate", Model)
</form>