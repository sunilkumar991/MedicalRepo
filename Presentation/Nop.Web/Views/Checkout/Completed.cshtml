@model CheckoutCompletedModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    Html.AppendPageCssClassParts("html-checkout-page");
    Html.AppendPageCssClassParts("html-order-completed-page");
}


<script type="text/javascript">
    /*added code by Sunil Kumar at 27-03-2020*/
    $(document).ready(function () {
        Android.showToast("nativeapp-@Model.Orders.ToList().Select(l => l.OrderId).FirstOrDefault().ToString()");
    });
</script>

<div class="page checkout-page order-completed-page">
    @if (!Model.OnePageCheckoutEnabled)
    {
        @await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Complete })
    }

    @if (Model.IsScuccess)
    {
        <div class="page-title">
            <h1>@T("Checkout.ThankYou")</h1>
        </div>
        <div class="page-body checkout-data">
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutCompletedTop, additionalData = Model })

            <div class="section order-completed">

                <div class="title">
                    <strong>@T("Checkout.YourOrderHasBeenSuccessfullyProcessed")</strong><br />
                    <strong>Order Group Number : @Model.OrderGroupNumber</strong>
                </div>
                <div class="details">

                    @foreach (CheckoutOrderDetailJsonModel m in @Model.Orders)
                    {
                        <div class="order-number">
                            <strong>@T("Checkout.OrderNumber") : @m.CustomOrderNumber </strong><br />
                            @if (m.ExpectedDeliveryDate != null)
                            {
                                <strong>  @T("Order.ExpectedDeliveryDate") :  @m.ExpectedDeliveryDate</strong>
                            }
                        </div>
                        <div class="details-link">
                            <a href="@Url.RouteUrl("OrderDetails", new { orderID = m.OrderId })">@T("Checkout.PlacedOrderDetails")</a>
                        </div>
                        <br />
                    }
                </div>
                <div class="buttons">
                    <input type="button" value="@T("Checkout.ThankYou.Continue")" class="button-1 order-completed-continue-button" onclick="setLocation('@Url.RouteUrl("HomePage")')" />
                </div>

            </div>

            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutCompletedBottom, additionalData = Model })
        </div>
    }
    else
    {
        <h3 style="color:red">@Model.ErrorMessage</h3>
        <br />
        <div class="buttons">
            <input type="button" value="@T("Checkout.ThankYou.Continue")" class="button-1 order-completed-continue-button" onclick="setLocation('@Url.RouteUrl("HomePage")')" />
        </div>
    }
</div>
